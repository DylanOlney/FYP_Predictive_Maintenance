
# This file tells the Nginx service to reverse-proxy, and thereby expose specific 
# docker-compose services to specified routes on port 80 of the docker host.

# Exposed services are: 
# 	'flask-react'   (front-end UI server) 
# 	'mongo-express' (MongoDB web-UI for administrator)


# Basic Nginx configuration.

worker_processes auto;
pid /run/nginx.pid;
include /etc/nginx/modules-enabled/*.conf;

events {
    worker_connections 1024;
}


# Specifying server listen port, server locations (routes) and some more configs.

http {
    default_type   text/html;
    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    on;

    server {
	    # Listen to port 80.

        listen 80;
        server_name localhost 127.0.0.1;


	    # Home route for the front-end application.

        location / {
            proxy_pass          http://node-react:80/;
            proxy_set_header    X-Forwarded-For $remote_addr;
        }

	    location /flask/ {
            proxy_pass          http://flask-mqtt:80/;
            proxy_set_header    X-Forwarded-For $remote_addr;
        }
        
	    # This route is for the administrator's 'mongo-express' service which  
        # enables CRUD operations on the underlying MongoDB service via a web-UI. 
	    # The route is password protected with 'auth_basic'.

	    location = /mongo-admin {
		    auth_basic              "Administrator's Area";
    		auth_basic_user_file    /etc/nginx/.htpasswd;
            proxy_pass		        http://mongo-express:8081;
		    proxy_set_header	    Host		$host;
		    proxy_set_header	    X-Real_IP	$remote_addr;
        }
	
	    # This route allows the 'mongo-express' service above to GET it's
	    # resources without any further 'auth_basic' authentication (.css, .js etc.).

	    location /mongo-admin/ {
            proxy_pass		    http://mongo-express:8081;
		    proxy_set_header	Host		$host;
		    proxy_set_header	X-Real_IP	$remote_addr;
        }


        # Redirect 401 (Auth required error) to a 403 (Forbidden error)
        # so that browsers won't display an authorization pop-up when 
        # trying to access auth_basic restricted locations.

        error_page 401 = @error401;
        location @error401 {
            return 403;
        }

    }
}

